<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java  on Keep Improving</title>
    <link>https://leejay.top/tags/java/</link>
    <description>Recent content in Java  on Keep Improving</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>苏ICP备18050258号-1</copyright>
    <lastBuildDate>Thu, 12 May 2022 17:55:10 +0800</lastBuildDate><atom:link href="https://leejay.top/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java中的小知识点</title>
      <link>https://leejay.top/post/java%E4%B8%AD%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
      <pubDate>Thu, 12 May 2022 17:55:10 +0800</pubDate>
      
      <guid>https://leejay.top/post/java%E4%B8%AD%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
      <description>1. Java是值传递还是引用传递 结论： Java只有值传递没有引用传递。
值传递与引用传递的区别：对形参的修改不会影响到实参被称为值传递。引用传递则相反。
public static void change(Integer i) { i = 3; } public static void change(Person person) { person.name = &amp;#34;李四&amp;#34;; } public static void main(String.. args) { Integer x = 1; change(x); System.out.println(x); // x = 1; Person person = new Person(&amp;#34;张三&amp;#34;); change(person); System.out.println(person.getName()); // &amp;#34;李四&amp;#34; } 如果是基本数据类型，是将数据复制一份传递给方法，自然不会影响。 如果是对象做参数时，将堆中对象的引用复制一份传递给方法，引用的地址不会被修改（也是被称为值传递的根本原因)，但是地址的内容会被函数修改。 2. 包装类Integer中的缓存池 Integer x = 123; Integer y = 123; System.out.println(x == y); // true Integer a = 128; Integer b = 128; System.</description>
    </item>
    
    <item>
      <title>Java中的进制与位运算</title>
      <link>https://leejay.top/post/java%E4%B8%AD%E7%9A%84%E8%BF%9B%E5%88%B6%E4%B8%8E%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
      <pubDate>Fri, 08 Apr 2022 14:44:27 +0800</pubDate>
      
      <guid>https://leejay.top/post/java%E4%B8%AD%E7%9A%84%E8%BF%9B%E5%88%B6%E4%B8%8E%E4%BD%8D%E8%BF%90%E7%AE%97/</guid>
      <description>进制详解 包括二进制、八进制、十进制和十六进制, 计算机由电路构成, 只有0/1两种状态, 所以采用的是二进制
二进制 由0 和 1组成, 计算机内部都是二进制的形式存储的。 进行加法运算的时候逢二进一, 减法运算的时候借一当二。在java中0b开头表示二进制值
十进制 由0~9的数字组成, 加法计算时逢十进一, 减法计算时借一当十。十进制是人类发展中自然形成的
八进制 由0~7的数字组成, 加法计算时逢八进一, 减法计算时借一当八。java中要求第一位是0开始
十六进制 由0~9,A(10),B(11),C(12),D(13),E(14),F(15)(不区分大小写)组成, 加法计算时逢十六进一, 减法计算时借一当十六。java中要求以0x开始
进制互相换算 二进制 -&amp;gt; 十进制 假设一个二进制是 1011(3210), 从右往左开始分别是 0、1、2、3 位, 那么它的十进制值为:
1*2^3 + 0*2^2 + 1*2^1 + 1*2^0 =&amp;gt; 8 + 0 + 2 + 1 =&amp;gt; 13 十进制 -&amp;gt; 二进制 假设一个十进制是 13, 一种方法是除二反序取余法, 计算如下:
13/2 = 6 余 1 6/2 = 3 余 0 3/2 = 1 余 1 1/2 = 0 余 1 反序取余数值, 结果是: 1101 另一种计算如下:</description>
    </item>
    
  </channel>
</rss>
