<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BlockingDeque  on Keep Improving</title>
    <link>https://blog.leejay.top/tags/blockingdeque/</link>
    <description>Recent content in BlockingDeque  on Keep Improving</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>苏ICP备18050258号-1</copyright>
    <lastBuildDate>Mon, 06 Jul 2020 19:20:56 +0800</lastBuildDate>
    <atom:link href="https://blog.leejay.top/tags/blockingdeque/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BlockingDeque双端阻塞队列源码浅析</title>
      <link>https://blog.leejay.top/post/concurrent_blocking_deque/</link>
      <pubDate>Mon, 06 Jul 2020 19:20:56 +0800</pubDate>
      <guid>https://blog.leejay.top/post/concurrent_blocking_deque/</guid>
      <description>BlockingDeque 双端队列，支持在队列的头尾出增加或获取数据，Deque接口中定义了相关的方法&#xA;public interface Deque&amp;lt;E&amp;gt; extends Queue&amp;lt;E&amp;gt; { // 添加到队首 void addFirst(E e); // 添加到队尾 void addLast(E e); // 获取队首 boolean offerFirst(E e); // 获取队尾 boolean offerLast(E e); ... }&#x9;相比BlockingQueue的父接口Queue，Deque中定义了头尾操作数据的方法。&#xA;public interface BlockingDeque&amp;lt;E&amp;gt; extends BlockingQueue&amp;lt;E&amp;gt;, Deque&amp;lt;E&amp;gt; { void putFirst(E e) throws InterruptedException; void putLast(E e) throws InterruptedException; E takeFirst() throws InterruptedException; E takeLast() throws InterruptedException; ... } BlockingQueue继承了BlockingQueue和Deque接口。添加了一些抛出中断的方法。&#xA;LinkedBlockingDeque 我们以LinkedBlockingDeque为切入点了解双端队列的实现。&#xA;构造 public class LinkedBlockingDeque&amp;lt;E&amp;gt; extends AbstractQueue&amp;lt;E&amp;gt; implements BlockingDeque&amp;lt;E&amp;gt;, java.io.Serializable { // 内部维护的静态内部类是双向节点 static final class Node&amp;lt;E&amp;gt; { E item; Node&amp;lt;E&amp;gt; prev;// 区别 Node&amp;lt;E&amp;gt; next; Node(E x) { item = x; } } // (first == null &amp;amp;&amp;amp; last == null) || // (first.</description>
    </item>
  </channel>
</rss>
